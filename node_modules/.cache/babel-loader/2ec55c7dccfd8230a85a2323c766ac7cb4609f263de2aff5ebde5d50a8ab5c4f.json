{"ast":null,"code":"var _jsxFileName = \"/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport { Button, TextField, CircularProgress, Typography, Paper, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\nconst LazyGifPicker = /*#__PURE__*/lazy(_c = () => import(\"./GifPicker\"));\n_c2 = LazyGifPicker;\nconst App = () => {\n  _s();\n  const [showPicker, setShowPicker] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowPicker(true);\n    }, 1500);\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20vh\"\n    },\n    children: showPicker ? /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(LazyGifPicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yEMfxdfqhAU4CwqbRlcU72Mw2C4=\");\n_c3 = App;\nconst GifPicker = () => {\n  _s2();\n  const [query, setQuery] = useState(\"\");\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [copied, setCopied] = useState(\"\");\n  const [limitExceeded, setLimitExceeded] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [openAboutDialog, setOpenAboutDialog] = useState(false);\n  const [reachedApiLimit, setReachedApiLimit] = useState(false);\n  const [previousResults, setPreviousResults] = useState([]);\n  const [requestCount, setRequestCount] = useState(0);\n  const [lastRequestTimestamp, setLastRequestTimestamp] = useState(null);\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`);\n        const data = await response.json();\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map(gif => ({\n            id: gif.id,\n            images: gif.images\n          }));\n          setGifs(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n    fetchRandomGifs();\n  }, []);\n  const fetchGifs = async searchQuery => {\n    return await fetch(`https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(searchQuery)}&limit=10&format=mp4`);\n  };\n  const handleInputChange = async event => {\n    const value = event.target.value;\n    setQuery(value);\n    try {\n      if (value.trim() !== \"\") {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/search/tags?api_key=${API_KEY}&q=${encodeURIComponent(value)}&limit=5`);\n        const data = await response.json();\n        if (response.status === 200) {\n          const suggestionsData = data.data.map(suggestion => suggestion.name);\n          setSuggestions(suggestionsData);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search suggestions:\", error);\n    }\n  };\n  const handleSuggestionClick = async (event, suggestion) => {\n    event.preventDefault();\n    setQuery(suggestion);\n    await searchGifs(suggestion);\n  };\n  const searchGifs = async searchQuery => {\n    setSuggestions([]); // Clear suggestions\n\n    const queryValue = searchQuery || query;\n    if (queryValue.trim() === \"\") {\n      return;\n    }\n    setLoading(true);\n    setError(false);\n    setGifs([]);\n    setLimitExceeded(false); // Reset the limit exceeded state\n\n    try {\n      const response = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(queryValue)}&limit=10&format=mp4` // Specify format=mp4\n      );\n\n      if (response.status === 429) {\n        setLimitExceeded(true); // Set the limit exceeded state\n      } else {\n        const data = await response.json();\n        const gifData = data.data.map(gif => ({\n          id: gif.id,\n          images: gif.images\n        }));\n        setGifs(gifData);\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    }\n    setLoading(false);\n\n    // Update the request count and last request timestamp\n    setRequestCount(prevCount => prevCount + 1);\n    setLastRequestTimestamp(Date.now());\n\n    // Check the API rate limit\n    const checkApiLimit = () => {\n      const currentTime = Date.now();\n      const timeDiff = currentTime - (lastRequestTimestamp || 0);\n      if (requestCount >= 42 && timeDiff < 3600000) {\n        setLimitExceeded(true); // Set limitExceeded state variable to true\n        setReachedApiLimit(true); // Set reachedApiLimit state variable to true\n      } else if (requestCount >= 1000 && timeDiff < 86400000) {\n        setLimitExceeded(true); // Set limitExceeded state variable to true\n        setReachedApiLimit(true); // Set reachedApiLimit state variable to true\n      } else {\n        setLimitExceeded(false); // Reset the limitExceeded state variable\n        setReachedApiLimit(false); // Reset the reachedApiLimit state variable\n      }\n    };\n\n    checkApiLimit();\n  };\n  const copyToClipboard = url => {\n    navigator.clipboard.writeText(url);\n    setCopied(url);\n    setTimeout(() => {\n      setCopied(\"\");\n    }, 1500);\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      searchGifs();\n    }\n  };\n  const handleAboutClick = () => {\n    setOpenAboutDialog(true);\n  };\n  const handleAboutClose = () => {\n    setOpenAboutDialog(false);\n  };\n  useEffect(() => {\n    if (reachedApiLimit && gifs.length > 0) {\n      setPreviousResults(prevResults => [...prevResults, gifs]);\n      setGifs([]);\n    }\n  }, [reachedApiLimit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"GIF Picker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Search GIFs\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: query,\n            onChange: handleInputChange,\n            onKeyPress: handleKeyPress,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            marginTop: \"1rem\"\n          },\n          children: suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"0.5rem\",\n              cursor: \"pointer\"\n            },\n            onClick: event => handleSuggestionClick(event, suggestion),\n            children: suggestion\n          }, suggestion, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 24\n          }, this),\n          onClick: searchGifs,\n          disabled: loading,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          style: {\n            marginLeft: \"1rem\"\n          },\n          onClick: handleAboutClick,\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), limitExceeded && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"error\",\n          children: \"API rate limit exceeded! Please try again later.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"error\",\n          children: \"Error occurred while fetching GIFs. Please try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), gifs.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: gifs.map(gif => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            style: {\n              padding: \"1rem\",\n              textAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              src: gif.images.fixed_width.mp4,\n              autoPlay: true,\n              loop: true,\n              style: {\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: () => copyToClipboard(gif.images.fixed_width.mp4),\n              children: copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this)\n        }, gif.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }, this))\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openAboutDialog,\n      onClose: handleAboutClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"About GIF Picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"This is a simple GIF search application built with React and Material-UI. It uses the GIPHY API to fetch and display GIFs based on user search queries.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAboutClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), previousResults.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          marginTop: \"2rem\"\n        },\n        children: \"Previous Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), previousResults.map((results, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: results.map(gif => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            style: {\n              padding: \"1rem\",\n              textAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              src: gif.images.fixed_width.mp4,\n              autoPlay: true,\n              loop: true,\n              style: {\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: () => copyToClipboard(gif.images.fixed_width.mp4),\n              children: copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 19\n          }, this)\n        }, gif.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 17\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s2(GifPicker, \"mi64MTbD2eS4Qcuvlu4wPIqdJzw=\");\n_c4 = GifPicker;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LazyGifPicker$lazy\");\n$RefreshReg$(_c2, \"LazyGifPicker\");\n$RefreshReg$(_c3, \"App\");\n$RefreshReg$(_c4, \"GifPicker\");","map":{"version":3,"names":["React","useState","useEffect","lazy","Suspense","Button","TextField","CircularProgress","Typography","Paper","Grid","Dialog","DialogTitle","DialogContent","DialogActions","Search","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","LazyGifPicker","_c","_c2","App","_s","showPicker","setShowPicker","timer","setTimeout","clearTimeout","style","textAlign","marginTop","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","_c3","GifPicker","_s2","query","setQuery","gifs","setGifs","loading","setLoading","error","setError","copied","setCopied","limitExceeded","setLimitExceeded","suggestions","setSuggestions","openAboutDialog","setOpenAboutDialog","reachedApiLimit","setReachedApiLimit","previousResults","setPreviousResults","requestCount","setRequestCount","lastRequestTimestamp","setLastRequestTimestamp","fetchRandomGifs","response","fetch","data","json","status","gifData","map","gif","id","images","console","fetchGifs","searchQuery","encodeURIComponent","handleInputChange","event","value","target","trim","suggestionsData","suggestion","name","handleSuggestionClick","preventDefault","searchGifs","queryValue","prevCount","Date","now","checkApiLimit","currentTime","timeDiff","copyToClipboard","url","navigator","clipboard","writeText","handleKeyPress","key","handleAboutClick","handleAboutClose","length","prevResults","container","justify","spacing","item","xs","variant","gutterBottom","md","label","fullWidth","onChange","onKeyPress","autoFocus","padding","cursor","onClick","color","startIcon","disabled","marginLeft","sm","lg","src","fixed_width","mp4","autoPlay","loop","width","open","onClose","results","index","_c4","$RefreshReg$"],"sources":["/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx"],"sourcesContent":["import React, { useState, useEffect, ChangeEvent, KeyboardEvent, lazy, Suspense } from \"react\";\nimport { Button, TextField, CircularProgress, Typography, Paper, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\n\ninterface Gif {\n  id: string;\n  images: {\n    fixed_width: {\n      mp4: string;\n    };\n  };\n}\n\nconst LazyGifPicker: React.FC = lazy(() => import(\"./GifPicker\"));\n\nconst App: React.FC = () => {\n  const [showPicker, setShowPicker] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowPicker(true);\n    }, 1500);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"20vh\" }}>\n      {showPicker ? (\n        <Suspense fallback={<CircularProgress />}>\n          <LazyGifPicker />\n        </Suspense>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n};\n\nconst GifPicker: React.FC = () => {\n  const [query, setQuery] = useState<string>(\"\");\n  const [gifs, setGifs] = useState<Gif[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [copied, setCopied] = useState<string>(\"\");\n  const [limitExceeded, setLimitExceeded] = useState<boolean>(false);\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [openAboutDialog, setOpenAboutDialog] = useState<boolean>(false);\n  const [reachedApiLimit, setReachedApiLimit] = useState<boolean>(false);\n  const [previousResults, setPreviousResults] = useState<Gif[][]>([]);\n  const [requestCount, setRequestCount] = useState<number>(0);\n  const [lastRequestTimestamp, setLastRequestTimestamp] = useState<number | null>(null);\n\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`\n        );\n        const data = await response.json();\n\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map((gif: any) => ({\n            id: gif.id,\n            images: gif.images,\n          }));\n          setGifs(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n\n    fetchRandomGifs();\n  }, []);\n\n  const fetchGifs = async (searchQuery: string) => {\n    return await fetch(\n      `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(\n        searchQuery\n      )}&limit=10&format=mp4`\n    );\n  };\n\n  const handleInputChange = async (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setQuery(value);\n\n    try {\n      if (value.trim() !== \"\") {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/search/tags?api_key=${API_KEY}&q=${encodeURIComponent(\n            value\n          )}&limit=5`\n        );\n        const data = await response.json();\n\n        if (response.status === 200) {\n          const suggestionsData = data.data.map((suggestion: any) => suggestion.name);\n          setSuggestions(suggestionsData);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search suggestions:\", error);\n    }\n  };\n\n  const handleSuggestionClick = async (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    suggestion: string\n  ) => {\n    event.preventDefault();\n    setQuery(suggestion);\n    await searchGifs(suggestion);\n  };\n\n  const searchGifs = async (searchQuery?: string) => {\n    setSuggestions([]); // Clear suggestions\n\n    const queryValue = searchQuery || query;\n    if (queryValue.trim() === \"\") {\n      return;\n    }\n\n    setLoading(true);\n    setError(false);\n    setGifs([]);\n    setLimitExceeded(false); // Reset the limit exceeded state\n\n    try {\n      const response = await fetch(\n        `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(\n          queryValue\n        )}&limit=10&format=mp4` // Specify format=mp4\n      );\n\n      if (response.status === 429) {\n        setLimitExceeded(true); // Set the limit exceeded state\n      } else {\n        const data = await response.json();\n        const gifData = data.data.map((gif: any) => ({\n          id: gif.id,\n          images: gif.images,\n        }));\n        setGifs(gifData);\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    }\n\n    setLoading(false);\n\n    // Update the request count and last request timestamp\n    setRequestCount((prevCount) => prevCount + 1);\n    setLastRequestTimestamp(Date.now());\n\n    // Check the API rate limit\n    const checkApiLimit = () => {\n      const currentTime = Date.now();\n      const timeDiff = currentTime - (lastRequestTimestamp || 0);\n\n      if (requestCount >= 42 && timeDiff < 3600000) {\n        setLimitExceeded(true); // Set limitExceeded state variable to true\n        setReachedApiLimit(true); // Set reachedApiLimit state variable to true\n      } else if (requestCount >= 1000 && timeDiff < 86400000) {\n        setLimitExceeded(true); // Set limitExceeded state variable to true\n        setReachedApiLimit(true); // Set reachedApiLimit state variable to true\n      } else {\n        setLimitExceeded(false); // Reset the limitExceeded state variable\n        setReachedApiLimit(false); // Reset the reachedApiLimit state variable\n      }\n    };\n\n    checkApiLimit();\n  };\n\n  const copyToClipboard = (url: string) => {\n    navigator.clipboard.writeText(url);\n    setCopied(url);\n    setTimeout(() => {\n      setCopied(\"\");\n    }, 1500);\n  };\n\n  const handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      searchGifs();\n    }\n  };\n\n  const handleAboutClick = () => {\n    setOpenAboutDialog(true);\n  };\n\n  const handleAboutClose = () => {\n    setOpenAboutDialog(false);\n  };\n\n  useEffect(() => {\n    if (reachedApiLimit && gifs.length > 0) {\n      setPreviousResults((prevResults) => [...prevResults, gifs]);\n      setGifs([]);\n    }\n  }, [reachedApiLimit]);\n\n  return (\n    <div>\n      <Grid container justify=\"center\" spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h4\" gutterBottom>\n            GIF Picker\n          </Typography>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper>\n            <TextField\n              label=\"Search GIFs\"\n              variant=\"outlined\"\n              fullWidth\n              value={query}\n              onChange={handleInputChange}\n              onKeyPress={handleKeyPress}\n              autoFocus\n            />\n          </Paper>\n          {suggestions.length > 0 && (\n            <Paper style={{ marginTop: \"1rem\" }}>\n              {suggestions.map((suggestion) => (\n                <div\n                  key={suggestion}\n                  style={{ padding: \"0.5rem\", cursor: \"pointer\" }}\n                  onClick={(event) => handleSuggestionClick(event, suggestion)}\n                >\n                  {suggestion}\n                </div>\n              ))}\n            </Paper>\n          )}\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<Search />}\n            onClick={searchGifs}\n            disabled={loading}\n          >\n            Search\n          </Button>\n          <Button\n            variant=\"outlined\"\n            style={{ marginLeft: \"1rem\" }}\n            onClick={handleAboutClick}\n          >\n            About\n          </Button>\n        </Grid>\n        {limitExceeded && (\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" color=\"error\">\n              API rate limit exceeded! Please try again later.\n            </Typography>\n          </Grid>\n        )}\n        {loading && (\n          <Grid item xs={12}>\n            <CircularProgress />\n          </Grid>\n        )}\n        {error && (\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" color=\"error\">\n              Error occurred while fetching GIFs. Please try again.\n            </Typography>\n          </Grid>\n        )}\n        {gifs.length > 0 && (\n          <>\n            {gifs.map((gif) => (\n              <Grid item xs={12} sm={6} md={4} lg={3} key={gif.id}>\n                <Paper style={{ padding: \"1rem\", textAlign: \"center\" }}>\n                  <video\n                    src={gif.images.fixed_width.mp4}\n                    autoPlay\n                    loop\n                    style={{ width: \"100%\" }}\n                  />\n                  <Button\n                    variant=\"outlined\"\n                    onClick={() => copyToClipboard(gif.images.fixed_width.mp4)}\n                  >\n                    {copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy URL\"}\n                  </Button>\n                </Paper>\n              </Grid>\n            ))}\n          </>\n        )}\n      </Grid>\n      <Dialog open={openAboutDialog} onClose={handleAboutClose}>\n        <DialogTitle>About GIF Picker</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body1\">\n            This is a simple GIF search application built with React and Material-UI. It uses the\n            GIPHY API to fetch and display GIFs based on user search queries.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleAboutClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {previousResults.length > 0 && (\n        <>\n          <Typography variant=\"h6\" style={{ marginTop: \"2rem\" }}>\n            Previous Results\n          </Typography>\n          {previousResults.map((results, index) => (\n            <Grid container spacing={2} key={index}>\n              {results.map((gif) => (\n                <Grid item xs={12} sm={6} md={4} lg={3} key={gif.id}>\n                  <Paper style={{ padding: \"1rem\", textAlign: \"center\" }}>\n                    <video\n                      src={gif.images.fixed_width.mp4}\n                      autoPlay\n                      loop\n                      style={{ width: \"100%\" }}\n                    />\n                    <Button\n                      variant=\"outlined\"\n                      onClick={() => copyToClipboard(gif.images.fixed_width.mp4)}\n                    >\n                      {copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy URL\"}\n                    </Button>\n                  </Paper>\n                </Grid>\n              ))}\n            </Grid>\n          ))}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}