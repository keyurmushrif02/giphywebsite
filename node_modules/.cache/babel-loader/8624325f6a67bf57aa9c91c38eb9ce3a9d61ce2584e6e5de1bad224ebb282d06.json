{"ast":null,"code":"var _jsxFileName = \"/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport { Button, TextField, CircularProgress, Typography, Paper, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\nconst LazyGifPicker = /*#__PURE__*/lazy(_c = () => import(\"./GifPicker\"));\n_c2 = LazyGifPicker;\nconst App = () => {\n  _s();\n  const [showPicker, setShowPicker] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowPicker(true);\n    }, 1500);\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20vh\"\n    },\n    children: showPicker ? /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(LazyGifPicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yEMfxdfqhAU4CwqbRlcU72Mw2C4=\");\n_c3 = App;\nconst GifPicker = () => {\n  _s2();\n  const [query, setQuery] = useState(\"\");\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [copied, setCopied] = useState(\"\");\n  const [limitExceeded, setLimitExceeded] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [openAboutDialog, setOpenAboutDialog] = useState(false);\n  const [requestCount, setRequestCount] = useState(0);\n  const [lastRequestTimestamp, setLastRequestTimestamp] = useState(null);\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`);\n        const data = await response.json();\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map(gif => ({\n            id: gif.id,\n            images: gif.images\n          }));\n          setGifs(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n    fetchRandomGifs();\n  }, []);\n  const handleInputChange = async event => {\n    const value = event.target.value;\n    setQuery(value);\n    try {\n      if (value.trim() !== \"\") {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/search/tags?api_key=${API_KEY}&q=${encodeURIComponent(value)}&limit=5`);\n        const data = await response.json();\n        if (response.status === 200) {\n          const suggestionsData = data.data.map(suggestion => suggestion.name);\n          setSuggestions(suggestionsData);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search suggestions:\", error);\n    }\n  };\n  const handleSuggestionClick = suggestion => {\n    setQuery(suggestion);\n    setSuggestions([]);\n  };\n  const handleKeyDown = async event => {\n    if (event.key === \"Enter\") {\n      await searchGifs();\n    }\n  };\n  const searchGifs = async () => {\n    if (query.trim() === \"\") {\n      return;\n    }\n    setLoading(true);\n    setError(false);\n    setCopied(\"\");\n    try {\n      const currentTime = Date.now();\n      if (lastRequestTimestamp && currentTime - lastRequestTimestamp < 3600000) {\n        setRequestCount(prevCount => prevCount + 1);\n        if (requestCount >= 42) {\n          setLimitExceeded(true);\n          setLoading(false);\n          return;\n        }\n      } else {\n        setRequestCount(1);\n        setLastRequestTimestamp(currentTime);\n      }\n      const response = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(query)}&limit=10`);\n      const data = await response.json();\n      if (response.status === 429) {\n        setLimitExceeded(true);\n      } else if (response.status === 200) {\n        const gifData = data.data.map(gif => ({\n          id: gif.id,\n          images: gif.images\n        }));\n        setGifs(gifData);\n      } else {\n        setError(true);\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const copyGifUrl = url => {\n    navigator.clipboard.writeText(url);\n    setCopied(url);\n  };\n  const handleAboutDialogOpen = () => {\n    setOpenAboutDialog(true);\n  };\n  const handleAboutDialogClose = () => {\n    setOpenAboutDialog(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"GIF Picker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search GIFs\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: query,\n          onChange: handleInputChange,\n          onKeyDown: handleKeyDown,\n          disabled: limitExceeded || loading,\n          error: error,\n          helperText: error ? \"Error searching GIFs\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          style: {\n            marginTop: \"10px\"\n          },\n          children: suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            component: \"div\",\n            onClick: () => handleSuggestionClick(suggestion),\n            style: {\n              cursor: \"pointer\",\n              padding: \"5px\"\n            },\n            children: suggestion\n          }, suggestion, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 24\n          }, this),\n          onClick: () => searchGifs(),\n          disabled: loading,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [gifs.map(gif => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              autoPlay: true,\n              loop: true,\n              muted: true,\n              style: {\n                width: \"100%\",\n                maxWidth: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"source\", {\n                src: gif.images.fixed_width.mp4,\n                type: \"video/mp4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => copyGifUrl(gif.images.fixed_width.mp4),\n              disabled: copied === gif.images.fixed_width.mp4,\n              children: copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this)]\n          }, gif.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)), limitExceeded && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"error\",\n            children: \"API limit exceeded. Please try again later.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"error\",\n            children: \"Error searching GIFs. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openAboutDialog,\n      onClose: handleAboutDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"About GIF Picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          gutterBottom: true,\n          children: \"This app allows you to search and copy GIF URLs from GIPHY.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAboutDialogClose,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      color: \"primary\",\n      onClick: handleAboutDialogOpen,\n      children: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s2(GifPicker, \"dJvVym6k9tvTL0zpHD2KfHIeg4Y=\");\n_c4 = GifPicker;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LazyGifPicker$lazy\");\n$RefreshReg$(_c2, \"LazyGifPicker\");\n$RefreshReg$(_c3, \"App\");\n$RefreshReg$(_c4, \"GifPicker\");","map":{"version":3,"names":["React","useState","useEffect","lazy","Suspense","Button","TextField","CircularProgress","Typography","Paper","Grid","Dialog","DialogTitle","DialogContent","DialogActions","Search","jsxDEV","_jsxDEV","API_KEY","LazyGifPicker","_c","_c2","App","_s","showPicker","setShowPicker","timer","setTimeout","clearTimeout","style","textAlign","marginTop","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","_c3","GifPicker","_s2","query","setQuery","gifs","setGifs","loading","setLoading","error","setError","copied","setCopied","limitExceeded","setLimitExceeded","suggestions","setSuggestions","openAboutDialog","setOpenAboutDialog","requestCount","setRequestCount","lastRequestTimestamp","setLastRequestTimestamp","fetchRandomGifs","response","fetch","data","json","status","gifData","map","gif","id","images","console","handleInputChange","event","value","target","trim","encodeURIComponent","suggestionsData","suggestion","name","handleSuggestionClick","handleKeyDown","key","searchGifs","currentTime","Date","now","prevCount","copyGifUrl","url","navigator","clipboard","writeText","handleAboutDialogOpen","handleAboutDialogClose","padding","container","spacing","justify","item","xs","variant","gutterBottom","label","fullWidth","onChange","onKeyDown","disabled","helperText","length","elevation","component","onClick","cursor","color","startIcon","autoPlay","loop","muted","width","maxWidth","src","fixed_width","mp4","type","open","onClose","autoFocus","_c4","$RefreshReg$"],"sources":["/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx"],"sourcesContent":["import React, { useState, useEffect, ChangeEvent, KeyboardEvent, lazy, Suspense } from \"react\";\nimport { Button, TextField, CircularProgress, Typography, Paper, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\n\ninterface Gif {\n  id: string;\n  images: {\n    fixed_width: {\n      mp4: string;\n    };\n  };\n}\n\nconst LazyGifPicker: React.FC = lazy(() => import(\"./GifPicker\"));\n\nconst App: React.FC = () => {\n  const [showPicker, setShowPicker] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowPicker(true);\n    }, 1500);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"20vh\" }}>\n      {showPicker ? (\n        <Suspense fallback={<CircularProgress />}>\n          <LazyGifPicker />\n        </Suspense>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n};\n\nconst GifPicker: React.FC = () => {\n  const [query, setQuery] = useState<string>(\"\");\n  const [gifs, setGifs] = useState<Gif[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [copied, setCopied] = useState<string>(\"\");\n  const [limitExceeded, setLimitExceeded] = useState<boolean>(false);\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [openAboutDialog, setOpenAboutDialog] = useState<boolean>(false);\n  const [requestCount, setRequestCount] = useState<number>(0);\n  const [lastRequestTimestamp, setLastRequestTimestamp] = useState<number | null>(null);\n\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`\n        );\n        const data = await response.json();\n\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map((gif: any) => ({\n            id: gif.id,\n            images: gif.images,\n          }));\n          setGifs(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n\n    fetchRandomGifs();\n  }, []);\n\n  const handleInputChange = async (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setQuery(value);\n\n    try {\n      if (value.trim() !== \"\") {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/search/tags?api_key=${API_KEY}&q=${encodeURIComponent(\n            value\n          )}&limit=5`\n        );\n        const data = await response.json();\n\n        if (response.status === 200) {\n          const suggestionsData = data.data.map((suggestion: any) => suggestion.name);\n          setSuggestions(suggestionsData);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search suggestions:\", error);\n    }\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    setQuery(suggestion);\n    setSuggestions([]);\n  };\n\n  const handleKeyDown = async (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      await searchGifs();\n    }\n  };\n\n  const searchGifs = async () => {\n    if (query.trim() === \"\") {\n      return;\n    }\n\n    setLoading(true);\n    setError(false);\n    setCopied(\"\");\n\n    try {\n      const currentTime = Date.now();\n      if (lastRequestTimestamp && currentTime - lastRequestTimestamp < 3600000) {\n        setRequestCount((prevCount) => prevCount + 1);\n        if (requestCount >= 42) {\n          setLimitExceeded(true);\n          setLoading(false);\n          return;\n        }\n      } else {\n        setRequestCount(1);\n        setLastRequestTimestamp(currentTime);\n      }\n\n      const response = await fetch(\n        `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(\n          query\n        )}&limit=10`\n      );\n      const data = await response.json();\n\n      if (response.status === 429) {\n        setLimitExceeded(true);\n      } else if (response.status === 200) {\n        const gifData = data.data.map((gif: any) => ({\n          id: gif.id,\n          images: gif.images,\n        }));\n        setGifs(gifData);\n      } else {\n        setError(true);\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const copyGifUrl = (url: string) => {\n    navigator.clipboard.writeText(url);\n    setCopied(url);\n  };\n\n  const handleAboutDialogOpen = () => {\n    setOpenAboutDialog(true);\n  };\n\n  const handleAboutDialogClose = () => {\n    setOpenAboutDialog(false);\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <Grid container spacing={2} justify=\"center\">\n        <Grid item xs={12}>\n          <Typography variant=\"h4\" gutterBottom>\n            GIF Picker\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            label=\"Search GIFs\"\n            variant=\"outlined\"\n            fullWidth\n            value={query}\n            onChange={handleInputChange}\n            onKeyDown={handleKeyDown}\n            disabled={limitExceeded || loading}\n            error={error}\n            helperText={error ? \"Error searching GIFs\" : \"\"}\n          />\n          {suggestions.length > 0 && (\n            <Paper elevation={3} style={{ marginTop: \"10px\" }}>\n              {suggestions.map((suggestion) => (\n                <Typography\n                  key={suggestion}\n                  variant=\"body2\"\n                  component=\"div\"\n                  onClick={() => handleSuggestionClick(suggestion)}\n                  style={{ cursor: \"pointer\", padding: \"5px\" }}\n                >\n                  {suggestion}\n                </Typography>\n              ))}\n            </Paper>\n          )}\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<Search />}\n            onClick={() => searchGifs()}\n            disabled={loading}\n          >\n            Search\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          {loading ? (\n            <CircularProgress />\n          ) : (\n            <div>\n              {gifs.map((gif) => (\n                <div key={gif.id}>\n                  <video autoPlay loop muted style={{ width: \"100%\", maxWidth: \"300px\" }}>\n                    <source src={gif.images.fixed_width.mp4} type=\"video/mp4\" />\n                  </video>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => copyGifUrl(gif.images.fixed_width.mp4)}\n                    disabled={copied === gif.images.fixed_width.mp4}\n                  >\n                    {copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy URL\"}\n                  </Button>\n                </div>\n              ))}\n              {limitExceeded && (\n                <Typography variant=\"body1\" color=\"error\">\n                  API limit exceeded. Please try again later.\n                </Typography>\n              )}\n              {error && (\n                <Typography variant=\"body1\" color=\"error\">\n                  Error searching GIFs. Please try again.\n                </Typography>\n              )}\n            </div>\n          )}\n        </Grid>\n      </Grid>\n      <Dialog open={openAboutDialog} onClose={handleAboutDialogClose}>\n        <DialogTitle>About GIF Picker</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body1\" gutterBottom>\n            This app allows you to search and copy GIF URLs from GIPHY.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleAboutDialogClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Button variant=\"text\" color=\"primary\" onClick={handleAboutDialogOpen}>\n        About\n      </Button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}