{"ast":null,"code":"var _jsxFileName = \"/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Typography, Button, CircularProgress, TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\nconst GifPicker = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [limitExceeded, setLimitExceeded] = useState(false);\n  const [prevResults, setPrevResults] = useState([]);\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`);\n        const data = await response.json();\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map(gif => ({\n            id: gif.id,\n            images: gif.images\n          }));\n          setPrevResults(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n    fetchRandomGifs();\n  }, []);\n  const searchGifs = async () => {\n    if (query.trim() === \"\") {\n      return;\n    }\n    setLoading(true);\n    setError(false);\n    setGifs([]);\n    try {\n      const response = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(query)}&limit=10`);\n      const data = await response.json();\n      if (response.status === 429) {\n        setLimitExceeded(true);\n      } else {\n        const gifData = data.data.map(gif => ({\n          id: gif.id,\n          images: gif.images\n        }));\n        setGifs(gifData);\n        setLimitExceeded(false);\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    }\n    setLoading(false);\n  };\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n  const copyToClipboard = url => {\n    navigator.clipboard.writeText(url).then(() => {\n      setCopied(true);\n      setTimeout(() => {\n        setCopied(false);\n      }, 2000);\n    }).catch(error => {\n      console.error(\"Error copying GIF URL to clipboard:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Search for GIFs\",\n      value: query,\n      onChange: handleInputChange,\n      variant: \"outlined\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: searchGifs,\n      disabled: loading,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error fetching GIFs. Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this), limitExceeded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"API rate limit exceeded. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), gifs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Search Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: gifs.map(gif => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            autoPlay: true,\n            loop: true,\n            src: gif.images.fixed_width.mp4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: () => copyToClipboard(gif.images.fixed_width.mp4),\n            children: copied ? \"Copied!\" : \"Copy URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)]\n        }, gif.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), prevResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Previous Trending GIFs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: prevResults.map(gif => /*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          loop: true,\n          src: gif.images.fixed_width.mp4\n        }, gif.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(GifPicker, \"7MJBgTPh3Ip48hNg3pi26M2zxyw=\");\n_c = GifPicker;\nexport default GifPicker;\nvar _c;\n$RefreshReg$(_c, \"GifPicker\");","map":{"version":3,"names":["useState","useEffect","Typography","Button","CircularProgress","TextField","jsxDEV","_jsxDEV","API_KEY","GifPicker","_s","query","setQuery","gifs","setGifs","loading","setLoading","error","setError","copied","setCopied","limitExceeded","setLimitExceeded","prevResults","setPrevResults","fetchRandomGifs","response","fetch","data","json","status","gifData","map","gif","id","images","console","searchGifs","trim","encodeURIComponent","handleInputChange","event","target","value","copyToClipboard","url","navigator","clipboard","writeText","then","setTimeout","catch","children","label","onChange","variant","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","disabled","length","autoPlay","loop","src","fixed_width","mp4","_c","$RefreshReg$"],"sources":["/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx"],"sourcesContent":["import { useState, useEffect, ChangeEvent } from \"react\";\nimport {\n  Typography,\n  Button,\n  CircularProgress,\n  TextField,\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n  Chip,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport axios from \"axios\";\n\n\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\n\ninterface Gif {\n  id: string;\n  images: {\n    fixed_width: {\n      mp4: string;\n    };\n  };\n}\n\nconst GifPicker: React.FC = () => {\n  const [query, setQuery] = useState<string>(\"\");\n  const [gifs, setGifs] = useState<Gif[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [copied, setCopied] = useState<boolean>(false);\n  const [limitExceeded, setLimitExceeded] = useState<boolean>(false);\n  const [prevResults, setPrevResults] = useState<Gif[]>([]);\n\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`\n        );\n        const data = await response.json();\n\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map((gif: any) => ({\n            id: gif.id,\n            images: gif.images,\n          }));\n          setPrevResults(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n\n    fetchRandomGifs();\n  }, []);\n\n  const searchGifs = async () => {\n    if (query.trim() === \"\") {\n      return;\n    }\n\n    setLoading(true);\n    setError(false);\n    setGifs([]);\n\n    try {\n      const response = await fetch(\n        `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(\n          query\n        )}&limit=10`\n      );\n      const data = await response.json();\n\n      if (response.status === 429) {\n        setLimitExceeded(true);\n      } else {\n        const gifData = data.data.map((gif: any) => ({\n          id: gif.id,\n          images: gif.images,\n        }));\n        setGifs(gifData);\n        setLimitExceeded(false);\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    }\n\n    setLoading(false);\n  };\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const copyToClipboard = (url: string) => {\n    navigator.clipboard\n      .writeText(url)\n      .then(() => {\n        setCopied(true);\n        setTimeout(() => {\n          setCopied(false);\n        }, 2000);\n      })\n      .catch((error) => {\n        console.error(\"Error copying GIF URL to clipboard:\", error);\n      });\n  };\n\n  return (\n    <div>\n      <TextField\n        label=\"Search for GIFs\"\n        value={query}\n        onChange={handleInputChange}\n        variant=\"outlined\"\n        fullWidth\n      />\n\n      <Button variant=\"contained\" color=\"primary\" onClick={searchGifs} disabled={loading}>\n        Search\n      </Button>\n\n      {loading && <CircularProgress />}\n\n      {error && <div>Error fetching GIFs. Please try again.</div>}\n\n      {limitExceeded && (\n        <div>\n          API rate limit exceeded. Please try again later.\n        </div>\n      )}\n\n      {gifs.length > 0 && (\n        <div>\n          <Typography variant=\"h6\">Search Results:</Typography>\n          <div>\n            {gifs.map((gif) => (\n              <div key={gif.id}>\n                <video autoPlay loop src={gif.images.fixed_width.mp4} />\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => copyToClipboard(gif.images.fixed_width.mp4)}\n                >\n                  {copied ? \"Copied!\" : \"Copy URL\"}\n                </Button>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {prevResults.length > 0 && (\n        <div>\n          <Typography variant=\"h6\">Previous Trending GIFs:</Typography>\n          <div>\n            {prevResults.map((gif) => (\n              <video key={gif.id} autoPlay loop src={gif.images.fixed_width.mp4} />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GifPicker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}