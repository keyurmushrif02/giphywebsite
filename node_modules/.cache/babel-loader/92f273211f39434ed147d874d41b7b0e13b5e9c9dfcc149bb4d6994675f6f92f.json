{"ast":null,"code":"var _jsxFileName = \"/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport { Button, TextField, CircularProgress, Typography, Paper, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\nconst LazyGifPicker = /*#__PURE__*/lazy(_c = () => import(\"./GifPicker\"));\n_c2 = LazyGifPicker;\nconst App = () => {\n  _s();\n  const [showPicker, setShowPicker] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowPicker(true);\n    }, 1500);\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20vh\"\n    },\n    children: showPicker ? /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(LazyGifPicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yEMfxdfqhAU4CwqbRlcU72Mw2C4=\");\n_c3 = App;\nconst GifPicker = () => {\n  _s2();\n  const [query, setQuery] = useState(\"\");\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [copied, setCopied] = useState(\"\");\n  const [limitExceeded, setLimitExceeded] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [openAboutDialog, setOpenAboutDialog] = useState(false);\n  const [requestCount, setRequestCount] = useState(0);\n  const [lastRequestTimestamp, setLastRequestTimestamp] = useState(null);\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`);\n        const data = await response.json();\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map(gif => ({\n            id: gif.id,\n            images: gif.images\n          }));\n          setGifs(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n    fetchRandomGifs();\n  }, []);\n  const handleInputChange = async event => {\n    const value = event.target.value;\n    setQuery(value);\n    try {\n      if (value.trim() !== \"\") {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/search/tags?api_key=${API_KEY}&q=${encodeURIComponent(value)}&limit=5`);\n        const data = await response.json();\n        if (response.status === 200) {\n          const suggestionsData = data.data.map(suggestion => suggestion.name);\n          setSuggestions(suggestionsData);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search suggestions:\", error);\n    }\n  };\n  const handleSuggestionClick = async (event, suggestion) => {\n    event.preventDefault();\n    setQuery(suggestion);\n    await searchGifs(suggestion);\n  };\n  const searchGifs = async searchQuery => {\n    setSuggestions([]); // Clear suggestions\n\n    const queryValue = searchQuery || query;\n    if (queryValue.trim() === \"\") {\n      return;\n    }\n    setLoading(true);\n    setError(false);\n    setLimitExceeded(false); // Reset the limit exceeded state\n\n    try {\n      if (requestCount >= 42 || requestCount >= 1000) {\n        setLimitExceeded(true); // Set the limit exceeded state\n        alert(\"API limit reached. You can only see previous results.\");\n      } else {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(queryValue)}&limit=10&format=mp4` // Specify format=mp4\n        );\n\n        if (response.status === 429) {\n          setLimitExceeded(true); // Set the limit exceeded state\n          alert(\"API limit reached. You can only see previous results.\");\n        } else {\n          const data = await response.json();\n          const gifData = data.data.map(gif => ({\n            id: gif.id,\n            images: gif.images\n          }));\n          setGifs(gifData);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    }\n    setLoading(false);\n\n    // Update the request count and last request timestamp\n    setRequestCount(prevCount => prevCount + 1);\n    setLastRequestTimestamp(Date.now());\n  };\n  const copyToClipboard = url => {\n    navigator.clipboard.writeText(url);\n    setCopied(url);\n    setTimeout(() => {\n      setCopied(\"\");\n      if (document.hasFocus()) {\n        window.alert(\"GIF URL copied to clipboard!\");\n      }\n    }, 100);\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      searchGifs();\n    }\n  };\n  const handleAboutClick = () => {\n    setOpenAboutDialog(true);\n  };\n  const handleAboutClose = () => {\n    setOpenAboutDialog(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search for GIFs\",\n        value: query,\n        onChange: handleInputChange,\n        variant: \"outlined\",\n        fullWidth: true,\n        onKeyPress: handleKeyPress,\n        style: {\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => searchGifs(),\n        children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleAboutClick,\n        style: {\n          marginLeft: 8\n        },\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        position: \"relative\",\n        marginTop: 16\n      },\n      children: suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        onClick: event => handleSuggestionClick(event, suggestion),\n        style: {\n          padding: \"8px 16px\",\n          borderBottom: \"1px solid #ccc\",\n          cursor: \"pointer\"\n        },\n        children: suggestion\n      }, suggestion, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: gifs.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        style: {\n          marginTop: 16\n        },\n        children: gifs.map(gif => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            style: {\n              padding: 8,\n              display: \"flex\",\n              flexDirection: \"column\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              autoPlay: true,\n              loop: true,\n              src: gif.images.fixed_width.mp4,\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              style: {\n                marginTop: 8\n              },\n              onClick: () => copyToClipboard(gif.images.fixed_width.mp4),\n              children: copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 19\n          }, this)\n        }, gif.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          marginTop: 16\n        },\n        children: error ? \"Error loading GIFs\" : \"No GIFs found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openAboutDialog,\n      onClose: handleAboutClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"About GIF Picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"This is a simple GIF search app that uses the GIPHY API to fetch and display GIFs. You can search for GIFs by entering a search query and pressing Enter or clicking the search button. The app also provides search suggestions as you type.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          style: {\n            marginTop: 16\n          },\n          children: \"Note: The GIPHY API has a limit on the number of requests per day. If the limit is exceeded, you will only be able to see previous results until the limit resets.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAboutClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s2(GifPicker, \"dJvVym6k9tvTL0zpHD2KfHIeg4Y=\");\n_c4 = GifPicker;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LazyGifPicker$lazy\");\n$RefreshReg$(_c2, \"LazyGifPicker\");\n$RefreshReg$(_c3, \"App\");\n$RefreshReg$(_c4, \"GifPicker\");","map":{"version":3,"names":["React","useState","useEffect","lazy","Suspense","Button","TextField","CircularProgress","Typography","Paper","Grid","Dialog","DialogTitle","DialogContent","DialogActions","Search","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","LazyGifPicker","_c","_c2","App","_s","showPicker","setShowPicker","timer","setTimeout","clearTimeout","style","textAlign","marginTop","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","_c3","GifPicker","_s2","query","setQuery","gifs","setGifs","loading","setLoading","error","setError","copied","setCopied","limitExceeded","setLimitExceeded","suggestions","setSuggestions","openAboutDialog","setOpenAboutDialog","requestCount","setRequestCount","lastRequestTimestamp","setLastRequestTimestamp","fetchRandomGifs","response","fetch","data","json","status","gifData","map","gif","id","images","console","handleInputChange","event","value","target","trim","encodeURIComponent","suggestionsData","suggestion","name","handleSuggestionClick","preventDefault","searchGifs","searchQuery","queryValue","alert","prevCount","Date","now","copyToClipboard","url","navigator","clipboard","writeText","document","hasFocus","window","handleKeyPress","key","handleAboutClick","handleAboutClose","maxWidth","margin","display","alignItems","label","onChange","variant","fullWidth","onKeyPress","marginRight","color","onClick","marginLeft","length","position","padding","borderBottom","cursor","container","spacing","item","xs","sm","md","elevation","flexDirection","autoPlay","loop","src","fixed_width","mp4","width","open","onClose","_c4","$RefreshReg$"],"sources":["/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx"],"sourcesContent":["import React, { useState, useEffect, ChangeEvent, KeyboardEvent, lazy, Suspense } from \"react\";\nimport { Button, TextField, CircularProgress, Typography, Paper, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\n\ninterface Gif {\n  id: string;\n  images: {\n    fixed_width: {\n      mp4: string;\n    };\n  };\n}\n\nconst LazyGifPicker: React.FC = lazy(() => import(\"./GifPicker\"));\n\nconst App: React.FC = () => {\n  const [showPicker, setShowPicker] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowPicker(true);\n    }, 1500);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"20vh\" }}>\n      {showPicker ? (\n        <Suspense fallback={<CircularProgress />}>\n          <LazyGifPicker />\n        </Suspense>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n};\n\nconst GifPicker: React.FC = () => {\n  const [query, setQuery] = useState<string>(\"\");\n  const [gifs, setGifs] = useState<Gif[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [copied, setCopied] = useState<string>(\"\");\n  const [limitExceeded, setLimitExceeded] = useState<boolean>(false);\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [openAboutDialog, setOpenAboutDialog] = useState<boolean>(false);\n  const [requestCount, setRequestCount] = useState<number>(0);\n  const [lastRequestTimestamp, setLastRequestTimestamp] = useState<number | null>(null);\n\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`\n        );\n        const data = await response.json();\n\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map((gif: any) => ({\n            id: gif.id,\n            images: gif.images,\n          }));\n          setGifs(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n\n    fetchRandomGifs();\n  }, []);\n\n  const handleInputChange = async (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setQuery(value);\n\n    try {\n      if (value.trim() !== \"\") {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/search/tags?api_key=${API_KEY}&q=${encodeURIComponent(\n            value\n          )}&limit=5`\n        );\n        const data = await response.json();\n\n        if (response.status === 200) {\n          const suggestionsData = data.data.map((suggestion: any) => suggestion.name);\n          setSuggestions(suggestionsData);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search suggestions:\", error);\n    }\n  };\n\n  const handleSuggestionClick = async (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    suggestion: string\n  ) => {\n    event.preventDefault();\n    setQuery(suggestion);\n    await searchGifs(suggestion);\n  };\n\n  const searchGifs = async (searchQuery?: string) => {\n    setSuggestions([]); // Clear suggestions\n\n    const queryValue = searchQuery || query;\n    if (queryValue.trim() === \"\") {\n      return;\n    }\n\n    setLoading(true);\n    setError(false);\n    setLimitExceeded(false); // Reset the limit exceeded state\n\n    try {\n      if (requestCount >= 42 || requestCount >= 1000) {\n        setLimitExceeded(true); // Set the limit exceeded state\n        alert(\"API limit reached. You can only see previous results.\");\n      } else {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(\n            queryValue\n          )}&limit=10&format=mp4` // Specify format=mp4\n        );\n\n        if (response.status === 429) {\n          setLimitExceeded(true); // Set the limit exceeded state\n          alert(\"API limit reached. You can only see previous results.\");\n        } else {\n          const data = await response.json();\n          const gifData = data.data.map((gif: any) => ({\n            id: gif.id,\n            images: gif.images,\n          }));\n          setGifs(gifData);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    }\n\n    setLoading(false);\n\n    // Update the request count and last request timestamp\n    setRequestCount((prevCount) => prevCount + 1);\n    setLastRequestTimestamp(Date.now());\n  };\n\n  const copyToClipboard = (url: string) => {\n    navigator.clipboard.writeText(url);\n    setCopied(url);\n    setTimeout(() => {\n      setCopied(\"\");\n      if (document.hasFocus()) {\n        window.alert(\"GIF URL copied to clipboard!\");\n      }\n    }, 100);\n  };\n\n  const handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      searchGifs();\n    }\n  };\n\n  const handleAboutClick = () => {\n    setOpenAboutDialog(true);\n  };\n\n  const handleAboutClose = () => {\n    setOpenAboutDialog(false);\n  };\n\n  return (\n    <div style={{ maxWidth: 600, margin: \"0 auto\" }}>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <TextField\n          label=\"Search for GIFs\"\n          value={query}\n          onChange={handleInputChange}\n          variant=\"outlined\"\n          fullWidth\n          onKeyPress={handleKeyPress}\n          style={{ marginRight: 8 }}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={() => searchGifs()}>\n          <Search />\n        </Button>\n        <Button variant=\"outlined\" onClick={handleAboutClick} style={{ marginLeft: 8 }}>\n          About\n        </Button>\n      </div>\n      {suggestions.length > 0 && (\n        <Paper style={{ position: \"relative\", marginTop: 16 }}>\n          {suggestions.map((suggestion) => (\n            <Typography\n              key={suggestion}\n              variant=\"body2\"\n              onClick={(event) => handleSuggestionClick(event, suggestion)}\n              style={{\n                padding: \"8px 16px\",\n                borderBottom: \"1px solid #ccc\",\n                cursor: \"pointer\",\n              }}\n            >\n              {suggestion}\n            </Typography>\n          ))}\n        </Paper>\n      )}\n      {loading ? (\n        <div style={{ textAlign: \"center\", marginTop: 16 }}>\n          <CircularProgress />\n        </div>\n      ) : (\n        <>\n          {gifs.length > 0 ? (\n            <Grid container spacing={2} style={{ marginTop: 16 }}>\n              {gifs.map((gif) => (\n                <Grid item xs={12} sm={6} md={4} key={gif.id}>\n                  <Paper\n                    elevation={3}\n                    style={{ padding: 8, display: \"flex\", flexDirection: \"column\" }}\n                  >\n                    <video autoPlay loop src={gif.images.fixed_width.mp4} width=\"100%\" />\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      style={{ marginTop: 8 }}\n                      onClick={() => copyToClipboard(gif.images.fixed_width.mp4)}\n                    >\n                      {copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy URL\"}\n                    </Button>\n                  </Paper>\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Typography variant=\"body1\" style={{ marginTop: 16 }}>\n              {error ? \"Error loading GIFs\" : \"No GIFs found\"}\n            </Typography>\n          )}\n        </>\n      )}\n      <Dialog open={openAboutDialog} onClose={handleAboutClose}>\n        <DialogTitle>About GIF Picker</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body1\">\n            This is a simple GIF search app that uses the GIPHY API to fetch and display GIFs. You\n            can search for GIFs by entering a search query and pressing Enter or clicking the search\n            button. The app also provides search suggestions as you type.\n          </Typography>\n          <Typography variant=\"body1\" style={{ marginTop: 16 }}>\n            Note: The GIPHY API has a limit on the number of requests per day. If the limit is\n            exceeded, you will only be able to see previous results until the limit resets.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleAboutClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}