{"ast":null,"code":"var _jsxFileName = \"/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport { Button, TextField, CircularProgress, Typography, Paper, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\nconst LazyGifPicker = /*#__PURE__*/lazy(_c = () => import(\"./GifPicker\"));\n_c2 = LazyGifPicker;\nconst App = () => {\n  _s();\n  const [showPicker, setShowPicker] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowPicker(true);\n    }, 1500);\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20vh\"\n    },\n    children: showPicker ? /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(LazyGifPicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yEMfxdfqhAU4CwqbRlcU72Mw2C4=\");\n_c3 = App;\nconst GifPicker = () => {\n  _s2();\n  const [query, setQuery] = useState(\"\");\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [copied, setCopied] = useState(\"\");\n  const [limitExceeded, setLimitExceeded] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [openAboutDialog, setOpenAboutDialog] = useState(false);\n  const [requestCount, setRequestCount] = useState(0);\n  const [lastRequestTimestamp, setLastRequestTimestamp] = useState(null);\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`);\n        const data = await response.json();\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map(gif => ({\n            id: gif.id,\n            images: gif.images\n          }));\n          setGifs(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n    fetchRandomGifs();\n  }, []);\n  const handleInputChange = async event => {\n    const value = event.target.value;\n    setQuery(value);\n    try {\n      if (value.trim() !== \"\") {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/search/tags?api_key=${API_KEY}&q=${encodeURIComponent(value)}&limit=5`);\n        const data = await response.json();\n        if (response.status === 200) {\n          const suggestionsData = data.data.map(suggestion => suggestion.name);\n          setSuggestions(suggestionsData);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search suggestions:\", error);\n    }\n  };\n  const handleSuggestionClick = async (event, suggestion) => {\n    event.preventDefault();\n    setQuery(suggestion);\n    await searchGifs(suggestion);\n  };\n  const searchGifs = async searchQuery => {\n    setSuggestions([]); // Clear suggestions\n\n    const queryValue = searchQuery || query;\n    if (queryValue.trim() === \"\") {\n      return;\n    }\n    setLoading(true);\n    setError(false);\n    setGifs([]);\n    setLimitExceeded(false); // Reset the limit exceeded state\n\n    try {\n      const response = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(queryValue)}&limit=10&format=mp4` // Specify format=mp4\n      );\n\n      if (response.status === 429) {\n        setLimitExceeded(true); // Set the limit exceeded state\n      } else {\n        const data = await response.json();\n        const gifData = data.data.map(gif => ({\n          id: gif.id,\n          images: gif.images\n        }));\n        setGifs(gifData);\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    }\n    setLoading(false);\n\n    // Update the request count and last request timestamp\n    setRequestCount(prevCount => prevCount + 1);\n    setLastRequestTimestamp(Date.now());\n\n    // Check the API rate limit\n    const checkApiLimit = () => {\n      const currentTime = Date.now();\n      const timeDiff = currentTime - (lastRequestTimestamp || 0);\n      if (requestCount >= 42 && timeDiff < 3600000) {\n        setLimitExceeded(true); // Set limitExceeded state variable to true\n      } else if (requestCount >= 1000 && timeDiff < 86400000) {\n        setLimitExceeded(true); // Set limitExceeded state variable to true\n      } else {\n        setLimitExceeded(false); // Reset the limitExceeded state variable\n      }\n    };\n\n    checkApiLimit();\n  };\n  const copyToClipboard = url => {\n    navigator.clipboard.writeText(url);\n    setCopied(url);\n    setTimeout(() => {\n      setCopied(\"\");\n    }, 1500);\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      searchGifs();\n    }\n  };\n  const handleAboutClick = () => {\n    setOpenAboutDialog(true);\n  };\n  const handleAboutClose = () => {\n    setOpenAboutDialog(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search for GIFs\",\n        value: query,\n        onChange: handleInputChange,\n        variant: \"outlined\",\n        fullWidth: true,\n        onKeyPress: handleKeyPress,\n        style: {\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => searchGifs(),\n        children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleAboutClick,\n        style: {\n          marginLeft: 8\n        },\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        position: \"relative\",\n        marginTop: 16\n      },\n      children: suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        onClick: event => handleSuggestionClick(event, suggestion),\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          cursor: \"pointer\",\n          padding: 8,\n          fontWeight: \"bold\",\n          color: \"white\",\n          backgroundColor: \"#4caf50\",\n          marginBottom: 8,\n          borderRadius: 4\n        },\n        children: suggestion\n      }, suggestion, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n      style: {\n        marginTop: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 19\n    }, this), limitExceeded && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      style: {\n        marginTop: 16\n      },\n      children: \"API limit exceeded. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      style: {\n        marginTop: 16\n      },\n      children: \"Error fetching GIFs.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        marginTop: 16\n      },\n      children: gifs.length > 0 ? gifs.map(gif => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            autoPlay: true,\n            loop: true,\n            src: gif.images.fixed_width.mp4,\n            style: {\n              width: \"100%\",\n              marginBottom: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => copyToClipboard(gif.images.fixed_width.mp4),\n            style: {\n              width: \"100%\",\n              backgroundColor: \"#2196f3\",\n              color: \"white\",\n              fontWeight: \"bold\"\n            },\n            children: copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy to Clipboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this)\n      }, gif.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            color: \"white\",\n            backgroundColor: \"#f44336\",\n            padding: 8,\n            borderRadius: 4\n          },\n          children: \"No GIFs found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openAboutDialog,\n      onClose: handleAboutClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"About GIPHY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"GIPHY is an online database and search engine that allows users to search for and share animated GIF files. You can find more information about GIPHY on their website:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://giphy.com/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"https://giphy.com/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAboutClose,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s2(GifPicker, \"dJvVym6k9tvTL0zpHD2KfHIeg4Y=\");\n_c4 = GifPicker;\nexport default GifPicker;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LazyGifPicker$lazy\");\n$RefreshReg$(_c2, \"LazyGifPicker\");\n$RefreshReg$(_c3, \"App\");\n$RefreshReg$(_c4, \"GifPicker\");","map":{"version":3,"names":["React","useState","useEffect","lazy","Suspense","Button","TextField","CircularProgress","Typography","Paper","Grid","Dialog","DialogTitle","DialogContent","DialogActions","Search","jsxDEV","_jsxDEV","API_KEY","LazyGifPicker","_c","_c2","App","_s","showPicker","setShowPicker","timer","setTimeout","clearTimeout","style","textAlign","marginTop","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","_c3","GifPicker","_s2","query","setQuery","gifs","setGifs","loading","setLoading","error","setError","copied","setCopied","limitExceeded","setLimitExceeded","suggestions","setSuggestions","openAboutDialog","setOpenAboutDialog","requestCount","setRequestCount","lastRequestTimestamp","setLastRequestTimestamp","fetchRandomGifs","response","fetch","data","json","status","gifData","map","gif","id","images","console","handleInputChange","event","value","target","trim","encodeURIComponent","suggestionsData","suggestion","name","handleSuggestionClick","preventDefault","searchGifs","searchQuery","queryValue","prevCount","Date","now","checkApiLimit","currentTime","timeDiff","copyToClipboard","url","navigator","clipboard","writeText","handleKeyPress","key","handleAboutClick","handleAboutClose","maxWidth","margin","display","alignItems","label","onChange","variant","fullWidth","onKeyPress","marginRight","color","onClick","marginLeft","length","position","cursor","padding","fontWeight","backgroundColor","marginBottom","borderRadius","container","spacing","item","xs","flexDirection","autoPlay","loop","src","fixed_width","mp4","width","open","onClose","href","rel","autoFocus","_c4","$RefreshReg$"],"sources":["/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx"],"sourcesContent":["import React, { useState, useEffect, ChangeEvent, KeyboardEvent, lazy, Suspense } from \"react\";\nimport { Button, TextField, CircularProgress, Typography, Paper, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\n\ninterface Gif {\n  id: string;\n  images: {\n    fixed_width: {\n      mp4: string;\n    };\n  };\n}\n\nconst LazyGifPicker: React.FC = lazy(() => import(\"./GifPicker\"));\n\nconst App: React.FC = () => {\n  const [showPicker, setShowPicker] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowPicker(true);\n    }, 1500);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"20vh\" }}>\n      {showPicker ? (\n        <Suspense fallback={<CircularProgress />}>\n          <LazyGifPicker />\n        </Suspense>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n};\n\nconst GifPicker: React.FC = () => {\n  const [query, setQuery] = useState<string>(\"\");\n  const [gifs, setGifs] = useState<Gif[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [copied, setCopied] = useState<string>(\"\");\n  const [limitExceeded, setLimitExceeded] = useState<boolean>(false);\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [openAboutDialog, setOpenAboutDialog] = useState<boolean>(false);\n  const [requestCount, setRequestCount] = useState<number>(0);\n  const [lastRequestTimestamp, setLastRequestTimestamp] = useState<number | null>(null);\n\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`\n        );\n        const data = await response.json();\n\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map((gif: any) => ({\n            id: gif.id,\n            images: gif.images,\n          }));\n          setGifs(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n\n    fetchRandomGifs();\n  }, []);\n\n  const handleInputChange = async (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setQuery(value);\n\n    try {\n      if (value.trim() !== \"\") {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/search/tags?api_key=${API_KEY}&q=${encodeURIComponent(\n            value\n          )}&limit=5`\n        );\n        const data = await response.json();\n\n        if (response.status === 200) {\n          const suggestionsData = data.data.map((suggestion: any) => suggestion.name);\n          setSuggestions(suggestionsData);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search suggestions:\", error);\n    }\n  };\n\n  const handleSuggestionClick = async (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    suggestion: string\n  ) => {\n    event.preventDefault();\n    setQuery(suggestion);\n    await searchGifs(suggestion);\n  };\n\n  const searchGifs = async (searchQuery?: string) => {\n    setSuggestions([]); // Clear suggestions\n\n    const queryValue = searchQuery || query;\n    if (queryValue.trim() === \"\") {\n      return;\n    }\n\n    setLoading(true);\n    setError(false);\n    setGifs([]);\n    setLimitExceeded(false); // Reset the limit exceeded state\n\n    try {\n      const response = await fetch(\n        `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(\n          queryValue\n        )}&limit=10&format=mp4` // Specify format=mp4\n      );\n\n      if (response.status === 429) {\n        setLimitExceeded(true); // Set the limit exceeded state\n      } else {\n        const data = await response.json();\n        const gifData = data.data.map((gif: any) => ({\n          id: gif.id,\n          images: gif.images,\n        }));\n        setGifs(gifData);\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    }\n\n    setLoading(false);\n\n    // Update the request count and last request timestamp\n    setRequestCount((prevCount) => prevCount + 1);\n    setLastRequestTimestamp(Date.now());\n\n    // Check the API rate limit\n    const checkApiLimit = () => {\n      const currentTime = Date.now();\n      const timeDiff = currentTime - (lastRequestTimestamp || 0);\n\n      if (requestCount >= 42 && timeDiff < 3600000) {\n        setLimitExceeded(true); // Set limitExceeded state variable to true\n      } else if (requestCount >= 1000 && timeDiff < 86400000) {\n        setLimitExceeded(true); // Set limitExceeded state variable to true\n      } else {\n        setLimitExceeded(false); // Reset the limitExceeded state variable\n      }\n    };\n\n    checkApiLimit();\n  };\n\n  const copyToClipboard = (url: string) => {\n    navigator.clipboard.writeText(url);\n    setCopied(url);\n    setTimeout(() => {\n      setCopied(\"\");\n    }, 1500);\n  };\n\n  const handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      searchGifs();\n    }\n  };\n\n  const handleAboutClick = () => {\n    setOpenAboutDialog(true);\n  };\n\n  const handleAboutClose = () => {\n    setOpenAboutDialog(false);\n  };\n\n  return (\n    <div style={{ maxWidth: 600, margin: \"0 auto\" }}>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <TextField\n          label=\"Search for GIFs\"\n          value={query}\n          onChange={handleInputChange}\n          variant=\"outlined\"\n          fullWidth\n          onKeyPress={handleKeyPress}\n          style={{ marginRight: 8 }}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={() => searchGifs()}>\n          <Search />\n        </Button>\n        <Button variant=\"outlined\" onClick={handleAboutClick} style={{ marginLeft: 8 }}>\n          About\n        </Button>\n      </div>\n      {suggestions.length > 0 && (\n        <Paper style={{ position: \"relative\", marginTop: 16 }}>\n          {suggestions.map((suggestion) => (\n            <Typography\n              key={suggestion}\n              variant=\"body2\"\n              onClick={(event) => handleSuggestionClick(event as any, suggestion)}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                cursor: \"pointer\",\n                padding: 8,\n                fontWeight: \"bold\",\n                color: \"white\",\n                backgroundColor: \"#4caf50\",\n                marginBottom: 8,\n                borderRadius: 4,\n              }}\n            >\n              {suggestion}\n            </Typography>\n          ))}\n        </Paper>\n      )}\n\n      {loading && <CircularProgress style={{ marginTop: 16 }} />}\n      {limitExceeded && (\n        <Typography color=\"error\" style={{ marginTop: 16 }}>\n          API limit exceeded. Please try again later.\n        </Typography>\n      )}\n      {error && <Typography color=\"error\" style={{ marginTop: 16 }}>Error fetching GIFs.</Typography>}\n      <Grid container spacing={2} style={{ marginTop: 16 }}>\n        {gifs.length > 0 ? (\n          gifs.map((gif) => (\n            <Grid item xs={4} key={gif.id}>\n              <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n                <video autoPlay loop src={gif.images.fixed_width.mp4} style={{ width: \"100%\", marginBottom: 8 }}></video>\n                <Button\n                  variant=\"contained\"\n                  onClick={() => copyToClipboard(gif.images.fixed_width.mp4)}\n                  style={{\n                    width: \"100%\",\n                    backgroundColor: \"#2196f3\",\n                    color: \"white\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy to Clipboard\"}\n                </Button>\n              </div>\n            </Grid>\n          ))\n        ) : (\n          <Grid item xs={12}>\n            <Typography variant=\"body2\" style={{ color: \"white\", backgroundColor: \"#f44336\", padding: 8, borderRadius: 4 }}>\n              No GIFs found.\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n      <Dialog open={openAboutDialog} onClose={handleAboutClose}>\n        <DialogTitle>About GIPHY</DialogTitle>\n        <DialogContent>\n          <Typography>\n            GIPHY is an online database and search engine that allows users to search for and share animated GIF files.\n            You can find more information about GIPHY on their website:\n          </Typography>\n          <Typography>\n            <a href=\"https://giphy.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              https://giphy.com/\n            </a>\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleAboutClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default GifPicker;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}