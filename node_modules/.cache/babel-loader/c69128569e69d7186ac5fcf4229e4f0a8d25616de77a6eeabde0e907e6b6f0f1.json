{"ast":null,"code":"var _jsxFileName = \"/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport { Button, TextField, CircularProgress, Typography, Paper, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\nconst LazyGifPicker = /*#__PURE__*/lazy(_c = () => import(\"./GifPicker\"));\n_c2 = LazyGifPicker;\nconst App = () => {\n  _s();\n  const [showPicker, setShowPicker] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowPicker(true);\n    }, 1500);\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20vh\"\n    },\n    children: showPicker ? /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(LazyGifPicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yEMfxdfqhAU4CwqbRlcU72Mw2C4=\");\n_c3 = App;\nconst GifPicker = () => {\n  _s2();\n  const [query, setQuery] = useState(\"\");\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [copied, setCopied] = useState(\"\");\n  const [limitExceeded, setLimitExceeded] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [openAboutDialog, setOpenAboutDialog] = useState(false);\n  const [requestCount, setRequestCount] = useState(0);\n  const [lastRequestTimestamp, setLastRequestTimestamp] = useState(null);\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`);\n        const data = await response.json();\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map(gif => ({\n            id: gif.id,\n            images: gif.images\n          }));\n          setGifs(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n    fetchRandomGifs();\n  }, []);\n  const handleInputChange = async event => {\n    const value = event.target.value;\n    setQuery(value);\n    try {\n      if (value.trim() !== \"\") {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/search/tags?api_key=${API_KEY}&q=${encodeURIComponent(value)}&limit=5`);\n        const data = await response.json();\n        if (response.status === 200) {\n          const suggestionsData = data.data.map(suggestion => suggestion.name);\n          setSuggestions(suggestionsData);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search suggestions:\", error);\n    }\n  };\n  const handleSuggestionClick = async (event, suggestion) => {\n    event.preventDefault();\n    setQuery(suggestion);\n    searchGifs();\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      searchGifs();\n    } else if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      const currentIndex = suggestions.indexOf(query);\n      const newIndex = currentIndex > 0 ? currentIndex - 1 : suggestions.length - 1;\n      setQuery(suggestions[newIndex]);\n    } else if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      const currentIndex = suggestions.indexOf(query);\n      const newIndex = currentIndex < suggestions.length - 1 ? currentIndex + 1 : 0;\n      setQuery(suggestions[newIndex]);\n    }\n  };\n  const searchGifs = async () => {\n    if (query.trim() === \"\") return;\n    setLoading(true);\n    setError(false);\n    try {\n      const response = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(query)}&limit=10`);\n      const data = await response.json();\n      if (response.status === 429) {\n        setLimitExceeded(true);\n      } else {\n        const gifData = data.data.map(gif => ({\n          id: gif.id,\n          images: gif.images\n        }));\n        setGifs(gifData);\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    } finally {\n      setLoading(false);\n      setSuggestions([]);\n    }\n  };\n  const handleCopyClick = url => {\n    setCopied(url);\n    navigator.clipboard.writeText(url);\n  };\n  const handleOpenAboutDialog = () => {\n    setOpenAboutDialog(true);\n  };\n  const handleCloseAboutDialog = () => {\n    setOpenAboutDialog(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: openAboutDialog,\n      onClose: handleCloseAboutDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"About Gif Picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Gif Picker is a simple web application that allows you to search and browse GIFs from Giphy. It uses the Giphy API to fetch trending GIFs and search for specific GIFs based on your query.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseAboutDialog,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Gif Picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          sm: 11,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Search for GIFs\",\n            value: query,\n            onChange: handleInputChange,\n            variant: \"outlined\",\n            fullWidth: true,\n            onKeyPress: handleKeyPress,\n            InputProps: {\n              style: {\n                backgroundColor: \"white\"\n              }\n            },\n            InputLabelProps: {\n              style: {\n                color: \"black\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n            square: true,\n            children: suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: event => handleSuggestionClick(event, suggestion),\n              children: suggestion\n            }, suggestion, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          sm: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: searchGifs,\n            children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n      style: {\n        marginTop: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"error\",\n      style: {\n        marginTop: 16\n      },\n      children: \"Error fetching GIFs. Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this) : limitExceeded ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"error\",\n      style: {\n        marginTop: 16\n      },\n      children: \"API rate limit exceeded. Please wait and try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        marginTop: 16\n      },\n      children: gifs.map(gif => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          style: {\n            padding: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            autoPlay: true,\n            loop: true,\n            muted: true,\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: gif.images.fixed_width.mp4,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: () => handleCopyClick(gif.images.fixed_width.mp4),\n            fullWidth: true,\n            children: copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this)\n      }, gif.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      color: \"primary\",\n      style: {\n        marginTop: 16\n      },\n      onClick: handleOpenAboutDialog,\n      children: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"caption\",\n      color: \"textSecondary\",\n      style: {\n        marginTop: 8\n      },\n      children: \"Powered by Giphy API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s2(GifPicker, \"dJvVym6k9tvTL0zpHD2KfHIeg4Y=\");\n_c4 = GifPicker;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LazyGifPicker$lazy\");\n$RefreshReg$(_c2, \"LazyGifPicker\");\n$RefreshReg$(_c3, \"App\");\n$RefreshReg$(_c4, \"GifPicker\");","map":{"version":3,"names":["React","useState","useEffect","lazy","Suspense","Button","TextField","CircularProgress","Typography","Paper","Grid","Dialog","DialogTitle","DialogContent","DialogActions","Search","jsxDEV","_jsxDEV","API_KEY","LazyGifPicker","_c","_c2","App","_s","showPicker","setShowPicker","timer","setTimeout","clearTimeout","style","textAlign","marginTop","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","_c3","GifPicker","_s2","query","setQuery","gifs","setGifs","loading","setLoading","error","setError","copied","setCopied","limitExceeded","setLimitExceeded","suggestions","setSuggestions","openAboutDialog","setOpenAboutDialog","requestCount","setRequestCount","lastRequestTimestamp","setLastRequestTimestamp","fetchRandomGifs","response","fetch","data","json","status","gifData","map","gif","id","images","console","handleInputChange","event","value","target","trim","encodeURIComponent","suggestionsData","suggestion","name","handleSuggestionClick","preventDefault","searchGifs","handleKeyPress","key","currentIndex","indexOf","newIndex","length","handleCopyClick","url","navigator","clipboard","writeText","handleOpenAboutDialog","handleCloseAboutDialog","padding","open","onClose","variant","onClick","gutterBottom","elevation","container","spacing","alignItems","item","xs","sm","label","onChange","fullWidth","onKeyPress","InputProps","backgroundColor","InputLabelProps","color","square","md","autoPlay","loop","muted","width","src","fixed_width","mp4","type","_c4","$RefreshReg$"],"sources":["/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx"],"sourcesContent":["import React, { useState, useEffect, ChangeEvent, KeyboardEvent, lazy, Suspense } from \"react\";\nimport { Button, TextField, CircularProgress, Typography, Paper, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\n\ninterface Gif {\n  id: string;\n  images: {\n    fixed_width: {\n      mp4: string;\n    };\n  };\n}\n\nconst LazyGifPicker: React.FC = lazy(() => import(\"./GifPicker\"));\n\nconst App: React.FC = () => {\n  const [showPicker, setShowPicker] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowPicker(true);\n    }, 1500);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"20vh\" }}>\n      {showPicker ? (\n        <Suspense fallback={<CircularProgress />}>\n          <LazyGifPicker />\n        </Suspense>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n};\n\nconst GifPicker: React.FC = () => {\n  const [query, setQuery] = useState<string>(\"\");\n  const [gifs, setGifs] = useState<Gif[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [copied, setCopied] = useState<string>(\"\");\n  const [limitExceeded, setLimitExceeded] = useState<boolean>(false);\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [openAboutDialog, setOpenAboutDialog] = useState<boolean>(false);\n  const [requestCount, setRequestCount] = useState<number>(0);\n  const [lastRequestTimestamp, setLastRequestTimestamp] = useState<number | null>(null);\n\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`\n        );\n        const data = await response.json();\n\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map((gif: any) => ({\n            id: gif.id,\n            images: gif.images,\n          }));\n          setGifs(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n\n    fetchRandomGifs();\n  }, []);\n\n  const handleInputChange = async (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setQuery(value);\n\n    try {\n      if (value.trim() !== \"\") {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/search/tags?api_key=${API_KEY}&q=${encodeURIComponent(\n            value\n          )}&limit=5`\n        );\n        const data = await response.json();\n\n        if (response.status === 200) {\n          const suggestionsData = data.data.map((suggestion: any) => suggestion.name);\n          setSuggestions(suggestionsData);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search suggestions:\", error);\n    }\n  };\n\n  const handleSuggestionClick = async (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    suggestion: string\n  ) => {\n    event.preventDefault();\n    setQuery(suggestion);\n    searchGifs();\n  };\n\n  const handleKeyPress = (event: KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      searchGifs();\n    } else if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      const currentIndex = suggestions.indexOf(query);\n      const newIndex = currentIndex > 0 ? currentIndex - 1 : suggestions.length - 1;\n      setQuery(suggestions[newIndex]);\n    } else if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      const currentIndex = suggestions.indexOf(query);\n      const newIndex = currentIndex < suggestions.length - 1 ? currentIndex + 1 : 0;\n      setQuery(suggestions[newIndex]);\n    }\n  };\n\n  const searchGifs = async () => {\n    if (query.trim() === \"\") return;\n\n    setLoading(true);\n    setError(false);\n\n    try {\n      const response = await fetch(\n        `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(\n          query\n        )}&limit=10`\n      );\n      const data = await response.json();\n\n      if (response.status === 429) {\n        setLimitExceeded(true);\n      } else {\n        const gifData = data.data.map((gif: any) => ({\n          id: gif.id,\n          images: gif.images,\n        }));\n        setGifs(gifData);\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    } finally {\n      setLoading(false);\n      setSuggestions([]);\n    }\n  };\n\n  const handleCopyClick = (url: string) => {\n    setCopied(url);\n    navigator.clipboard.writeText(url);\n  };\n\n  const handleOpenAboutDialog = () => {\n    setOpenAboutDialog(true);\n  };\n\n  const handleCloseAboutDialog = () => {\n    setOpenAboutDialog(false);\n  };\n\n  return (\n    <div style={{ padding: 16 }}>\n      <Dialog open={openAboutDialog} onClose={handleCloseAboutDialog}>\n        <DialogTitle>About Gif Picker</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body1\">\n            Gif Picker is a simple web application that allows you to search and browse GIFs from\n            Giphy. It uses the Giphy API to fetch trending GIFs and search for specific GIFs based\n            on your query.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseAboutDialog}>Close</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Typography variant=\"h4\" gutterBottom>\n        Gif Picker\n      </Typography>\n\n      <Paper elevation={3} style={{ padding: 16 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={10} sm={11}>\n            <TextField\n              label=\"Search for GIFs\"\n              value={query}\n              onChange={handleInputChange}\n              variant=\"outlined\"\n              fullWidth\n              onKeyPress={handleKeyPress}\n              InputProps={{ style: { backgroundColor: \"white\" } }}\n              InputLabelProps={{ style: { color: \"black\" } }}\n            />\n            {suggestions.length > 0 && (\n              <Paper square>\n                {suggestions.map((suggestion) => (\n                  <li\n                    key={suggestion}\n                    onClick={(event) => handleSuggestionClick(event, suggestion)}\n                  >\n                    {suggestion}\n                  </li>\n                ))}\n              </Paper>\n            )}\n          </Grid>\n          <Grid item xs={2} sm={1}>\n            <Button variant=\"contained\" color=\"primary\" onClick={searchGifs}>\n              <Search />\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      {loading ? (\n        <CircularProgress style={{ marginTop: 16 }} />\n      ) : error ? (\n        <Typography variant=\"body1\" color=\"error\" style={{ marginTop: 16 }}>\n          Error fetching GIFs. Please try again.\n        </Typography>\n      ) : limitExceeded ? (\n        <Typography variant=\"body1\" color=\"error\" style={{ marginTop: 16 }}>\n          API rate limit exceeded. Please wait and try again later.\n        </Typography>\n      ) : (\n        <Grid container spacing={2} style={{ marginTop: 16 }}>\n          {gifs.map((gif) => (\n            <Grid item xs={12} sm={6} md={4} key={gif.id}>\n              <Paper elevation={3} style={{ padding: 16 }}>\n                <video autoPlay loop muted style={{ width: \"100%\" }}>\n                  <source src={gif.images.fixed_width.mp4} type=\"video/mp4\" />\n                </video>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => handleCopyClick(gif.images.fixed_width.mp4)}\n                  fullWidth\n                >\n                  {copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy URL\"}\n                </Button>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      )}\n\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        style={{ marginTop: 16 }}\n        onClick={handleOpenAboutDialog}\n      >\n        About\n      </Button>\n\n      <Typography variant=\"caption\" color=\"textSecondary\" style={{ marginTop: 8 }}>\n        Powered by Giphy API\n      </Typography>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}