{"ast":null,"code":"var _jsxFileName = \"/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport { Button, TextField, CircularProgress, Typography, Paper, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\nconst LazyGifPicker = /*#__PURE__*/lazy(_c = () => import(\"./GifPicker\"));\n_c2 = LazyGifPicker;\nconst App = () => {\n  _s();\n  const [showPicker, setShowPicker] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowPicker(true);\n    }, 1500);\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20vh\"\n    },\n    children: showPicker ? /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(LazyGifPicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yEMfxdfqhAU4CwqbRlcU72Mw2C4=\");\n_c3 = App;\nconst GifPicker = () => {\n  _s2();\n  const [query, setQuery] = useState(\"\");\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [copied, setCopied] = useState(\"\");\n  const [limitExceeded, setLimitExceeded] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [openAboutDialog, setOpenAboutDialog] = useState(false);\n  const [requestCount, setRequestCount] = useState(0);\n  const [lastRequestTimestamp, setLastRequestTimestamp] = useState(null);\n  const [selectedSuggestionIndex, setSelectedSuggestionIndex] = useState(-1);\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`);\n        const data = await response.json();\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map(gif => ({\n            id: gif.id,\n            images: gif.images\n          }));\n          setGifs(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n    fetchRandomGifs();\n  }, []);\n  const handleInputChange = async event => {\n    const value = event.target.value;\n    setQuery(value);\n    try {\n      if (value.trim() !== \"\") {\n        const response = await fetch(`https://api.giphy.com/v1/gifs/search/tags?api_key=${API_KEY}&q=${encodeURIComponent(value)}&limit=5`);\n        const data = await response.json();\n        if (response.status === 200) {\n          const suggestionsData = data.data.map(suggestion => suggestion.name);\n          setSuggestions(suggestionsData);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search suggestions:\", error);\n    }\n  };\n  const handleSuggestionClick = async (event, suggestion) => {\n    event.preventDefault();\n    setQuery(suggestion);\n    await searchGifs(suggestion);\n  };\n  const handleSuggestionKeyDown = (event, index) => {\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      setSelectedSuggestionIndex(prevIndex => Math.max(prevIndex - 1, 0));\n    } else if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      setSelectedSuggestionIndex(prevIndex => Math.min(prevIndex + 1, suggestions.length - 1));\n    } else if (event.key === \"Enter\" && selectedSuggestionIndex !== -1) {\n      event.preventDefault();\n      const suggestion = suggestions[selectedSuggestionIndex];\n      setQuery(suggestion);\n      searchGifs(suggestion);\n    }\n  };\n  const searchGifs = async searchQuery => {\n    setLoading(true);\n    setError(false);\n    setLimitExceeded(false);\n    setGifs([]);\n    try {\n      const response = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(searchQuery || query)}&limit=9`);\n      const data = await response.json();\n      if (response.status === 429) {\n        setLimitExceeded(true);\n      } else if (response.status === 200) {\n        const gifData = data.data.map(gif => ({\n          id: gif.id,\n          images: gif.images\n        }));\n        setGifs(gifData);\n      } else {\n        setError(true);\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCopyToClipboard = url => {\n    navigator.clipboard.writeText(url);\n    setCopied(url);\n  };\n  const handleAboutDialogOpen = () => {\n    setOpenAboutDialog(true);\n  };\n  const handleAboutDialogClose = () => {\n    setOpenAboutDialog(false);\n  };\n  const handleRetry = () => {\n    searchGifs();\n  };\n  const handleShowMore = () => {\n    setRequestCount(prevCount => prevCount + 1);\n    searchGifs();\n  };\n  const handleCloseLimitExceeded = () => {\n    setLimitExceeded(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search for GIFs\",\n        value: query,\n        onChange: handleInputChange,\n        onKeyDown: event => handleSuggestionKeyDown(event, selectedSuggestionIndex),\n        variant: \"outlined\",\n        fullWidth: true,\n        style: {\n          marginRight: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 22\n        }, this),\n        onClick: () => searchGifs(),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: event => handleSuggestionClick(event, suggestion),\n        onKeyDown: event => handleSuggestionKeyDown(event, index),\n        role: \"button\",\n        tabIndex: 0,\n        style: {\n          padding: \"4px 8px\",\n          background: index === selectedSuggestionIndex ? \"#e0e0e0\" : \"transparent\",\n          cursor: \"pointer\"\n        },\n        children: suggestion\n      }, suggestion, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n      style: {\n        marginTop: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: error ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginTop: 16\n          },\n          children: \"Error occurred while searching for GIFs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleRetry,\n          style: {\n            marginTop: 16\n          },\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          style: {\n            marginTop: 16\n          },\n          children: gifs.map(gif => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              style: {\n                padding: 16\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"video\", {\n                src: gif.images.fixed_width.mp4,\n                autoPlay: true,\n                loop: true,\n                style: {\n                  width: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                onClick: () => handleCopyToClipboard(gif.images.fixed_width.mp4),\n                style: {\n                  marginTop: 8\n                },\n                children: copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy to Clipboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this)\n          }, gif.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this), limitExceeded && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginTop: 16\n          },\n          children: \"Request limit exceeded. Please try again later.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }, this), !limitExceeded && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleShowMore,\n          style: {\n            marginTop: 16\n          },\n          children: \"Show More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleAboutDialogOpen,\n      style: {\n        marginTop: 16\n      },\n      children: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openAboutDialog,\n      onClose: handleAboutDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"About GifPicker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"GifPicker is a simple React app for searching and copying GIFs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"It uses the Giphy API to fetch trending GIFs and search for GIFs based on user input.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAboutDialogClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s2(GifPicker, \"vKvr3srf/gFvplzmNaIbKU8UBR8=\");\n_c4 = GifPicker;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LazyGifPicker$lazy\");\n$RefreshReg$(_c2, \"LazyGifPicker\");\n$RefreshReg$(_c3, \"App\");\n$RefreshReg$(_c4, \"GifPicker\");","map":{"version":3,"names":["React","useState","useEffect","lazy","Suspense","Button","TextField","CircularProgress","Typography","Paper","Grid","Dialog","DialogTitle","DialogContent","DialogActions","Search","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","LazyGifPicker","_c","_c2","App","_s","showPicker","setShowPicker","timer","setTimeout","clearTimeout","style","textAlign","marginTop","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","_c3","GifPicker","_s2","query","setQuery","gifs","setGifs","loading","setLoading","error","setError","copied","setCopied","limitExceeded","setLimitExceeded","suggestions","setSuggestions","openAboutDialog","setOpenAboutDialog","requestCount","setRequestCount","lastRequestTimestamp","setLastRequestTimestamp","selectedSuggestionIndex","setSelectedSuggestionIndex","fetchRandomGifs","response","fetch","data","json","status","gifData","map","gif","id","images","console","handleInputChange","event","value","target","trim","encodeURIComponent","suggestionsData","suggestion","name","handleSuggestionClick","preventDefault","searchGifs","handleSuggestionKeyDown","index","key","prevIndex","Math","max","min","length","searchQuery","handleCopyToClipboard","url","navigator","clipboard","writeText","handleAboutDialogOpen","handleAboutDialogClose","handleRetry","handleShowMore","prevCount","handleCloseLimitExceeded","maxWidth","margin","display","alignItems","label","onChange","onKeyDown","variant","fullWidth","marginRight","color","startIcon","onClick","role","tabIndex","padding","background","cursor","container","spacing","item","xs","sm","md","elevation","src","fixed_width","mp4","autoPlay","loop","width","open","onClose","_c4","$RefreshReg$"],"sources":["/Users/sayalideshmukh/new-giphy-app/src/GifPicker.tsx"],"sourcesContent":["import React, { useState, useEffect, ChangeEvent, KeyboardEvent, lazy, Suspense } from \"react\";\nimport { Button, TextField, CircularProgress, Typography, Paper, Grid, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n\nconst API_KEY = \"oWMik3POHlNAyTrd6mVPMIpR20X0Lw1E\";\n\ninterface Gif {\n  id: string;\n  images: {\n    fixed_width: {\n      mp4: string;\n    };\n  };\n}\n\nconst LazyGifPicker: React.FC = lazy(() => import(\"./GifPicker\"));\n\nconst App: React.FC = () => {\n  const [showPicker, setShowPicker] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowPicker(true);\n    }, 1500);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"20vh\" }}>\n      {showPicker ? (\n        <Suspense fallback={<CircularProgress />}>\n          <LazyGifPicker />\n        </Suspense>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n};\n\nconst GifPicker: React.FC = () => {\n  const [query, setQuery] = useState<string>(\"\");\n  const [gifs, setGifs] = useState<Gif[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [copied, setCopied] = useState<string>(\"\");\n  const [limitExceeded, setLimitExceeded] = useState<boolean>(false);\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [openAboutDialog, setOpenAboutDialog] = useState<boolean>(false);\n  const [requestCount, setRequestCount] = useState<number>(0);\n  const [lastRequestTimestamp, setLastRequestTimestamp] = useState<number | null>(null);\n  const [selectedSuggestionIndex, setSelectedSuggestionIndex] = useState<number>(-1);\n\n  useEffect(() => {\n    const fetchRandomGifs = async () => {\n      try {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/trending?api_key=${API_KEY}&limit=3`\n        );\n        const data = await response.json();\n\n        if (response.status === 429) {\n          setLimitExceeded(true);\n        } else {\n          const gifData = data.data.map((gif: any) => ({\n            id: gif.id,\n            images: gif.images,\n          }));\n          setGifs(gifData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching random GIFs:\", error);\n      }\n    };\n\n    fetchRandomGifs();\n  }, []);\n\n  const handleInputChange = async (event: ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setQuery(value);\n\n    try {\n      if (value.trim() !== \"\") {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/search/tags?api_key=${API_KEY}&q=${encodeURIComponent(\n            value\n          )}&limit=5`\n        );\n        const data = await response.json();\n\n        if (response.status === 200) {\n          const suggestionsData = data.data.map((suggestion: any) => suggestion.name);\n          setSuggestions(suggestionsData);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search suggestions:\", error);\n    }\n  };\n\n  const handleSuggestionClick = async (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    suggestion: string\n  ) => {\n    event.preventDefault();\n    setQuery(suggestion);\n    await searchGifs(suggestion);\n  };\n\n  const handleSuggestionKeyDown = (event: KeyboardEvent, index: number) => {\n    if (event.key === \"ArrowUp\") {\n      event.preventDefault();\n      setSelectedSuggestionIndex((prevIndex) => Math.max(prevIndex - 1, 0));\n    } else if (event.key === \"ArrowDown\") {\n      event.preventDefault();\n      setSelectedSuggestionIndex((prevIndex) => Math.min(prevIndex + 1, suggestions.length - 1));\n    } else if (event.key === \"Enter\" && selectedSuggestionIndex !== -1) {\n      event.preventDefault();\n      const suggestion = suggestions[selectedSuggestionIndex];\n      setQuery(suggestion);\n      searchGifs(suggestion);\n    }\n  };\n\n  const searchGifs = async (searchQuery?: string) => {\n    setLoading(true);\n    setError(false);\n    setLimitExceeded(false);\n    setGifs([]);\n\n    try {\n      const response = await fetch(\n        `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${encodeURIComponent(\n          searchQuery || query\n        )}&limit=9`\n      );\n      const data = await response.json();\n\n      if (response.status === 429) {\n        setLimitExceeded(true);\n      } else if (response.status === 200) {\n        const gifData = data.data.map((gif: any) => ({\n          id: gif.id,\n          images: gif.images,\n        }));\n        setGifs(gifData);\n      } else {\n        setError(true);\n      }\n    } catch (error) {\n      console.error(\"Error searching GIFs:\", error);\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCopyToClipboard = (url: string) => {\n    navigator.clipboard.writeText(url);\n    setCopied(url);\n  };\n\n  const handleAboutDialogOpen = () => {\n    setOpenAboutDialog(true);\n  };\n\n  const handleAboutDialogClose = () => {\n    setOpenAboutDialog(false);\n  };\n\n  const handleRetry = () => {\n    searchGifs();\n  };\n\n  const handleShowMore = () => {\n    setRequestCount((prevCount) => prevCount + 1);\n    searchGifs();\n  };\n\n  const handleCloseLimitExceeded = () => {\n    setLimitExceeded(false);\n  };\n\n  return (\n    <div style={{ maxWidth: 600, margin: \"0 auto\" }}>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <TextField\n          label=\"Search for GIFs\"\n          value={query}\n          onChange={handleInputChange}\n          onKeyDown={(event) => handleSuggestionKeyDown(event, selectedSuggestionIndex)}\n          variant=\"outlined\"\n          fullWidth\n          style={{ marginRight: 8 }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<Search />}\n          onClick={() => searchGifs()}\n        >\n          Search\n        </Button>\n      </div>\n      <div>\n        {suggestions.map((suggestion, index) => (\n          <div\n            key={suggestion}\n            onClick={(event) => handleSuggestionClick(event, suggestion)}\n            onKeyDown={(event) => handleSuggestionKeyDown(event, index)}\n            role=\"button\"\n            tabIndex={0}\n            style={{\n              padding: \"4px 8px\",\n              background: index === selectedSuggestionIndex ? \"#e0e0e0\" : \"transparent\",\n              cursor: \"pointer\",\n            }}\n          >\n            {suggestion}\n          </div>\n        ))}\n      </div>\n      {loading ? (\n        <CircularProgress style={{ marginTop: 16 }} />\n      ) : (\n        <>\n          {error ? (\n            <>\n              <Typography variant=\"h6\" style={{ marginTop: 16 }}>\n                Error occurred while searching for GIFs.\n              </Typography>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleRetry} style={{ marginTop: 16 }}>\n                Retry\n              </Button>\n            </>\n          ) : (\n            <>\n              <Grid container spacing={2} style={{ marginTop: 16 }}>\n                {gifs.map((gif) => (\n                  <Grid item xs={12} sm={6} md={4} key={gif.id}>\n                    <Paper elevation={3} style={{ padding: 16 }}>\n                      <video\n                        src={gif.images.fixed_width.mp4}\n                        autoPlay\n                        loop\n                        style={{ width: \"100%\" }}\n                      />\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        fullWidth\n                        onClick={() => handleCopyToClipboard(gif.images.fixed_width.mp4)}\n                        style={{ marginTop: 8 }}\n                      >\n                        {copied === gif.images.fixed_width.mp4 ? \"Copied!\" : \"Copy to Clipboard\"}\n                      </Button>\n                    </Paper>\n                  </Grid>\n                ))}\n              </Grid>\n              {limitExceeded && (\n                <Typography variant=\"h6\" style={{ marginTop: 16 }}>\n                  Request limit exceeded. Please try again later.\n                </Typography>\n              )}\n              {!limitExceeded && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleShowMore}\n                  style={{ marginTop: 16 }}\n                >\n                  Show More\n                </Button>\n              )}\n            </>\n          )}\n        </>\n      )}\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleAboutDialogOpen} style={{ marginTop: 16 }}>\n        About\n      </Button>\n      <Dialog open={openAboutDialog} onClose={handleAboutDialogClose}>\n        <DialogTitle>About GifPicker</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body1\">GifPicker is a simple React app for searching and copying GIFs.</Typography>\n          <Typography variant=\"body1\">\n            It uses the Giphy API to fetch trending GIFs and search for GIFs based on user input.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleAboutDialogClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}